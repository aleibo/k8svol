#!/bin/bash

# Credits: based on two references 
# http://stackoverflow.com/questions/38120916/kubernetes-flexvolume-plugin-for-cifs
# https://github.com/sigma/cifs_k8s_plugin/blob/master/cifs.sh

#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Notes:
#  - Please install "jq" package before using this driver.
#  - need to install v3io fuse drivers
#    currently MOUNT_V3IO need to point to a one line script (bypass v3io-fuse issues):
#      "/home/iguazio/igz/clients/fuse/bin/v3io_adapters_fuse -b 16 -c "$1" $2 $3 $4 $5 $6 $7 $8 &"
#
# the driver need to be placed in:
# /usr/libexec/kubernetes/kubelet-plugins/volume/exec/igz~v3io/
#
# * this is the default, other path can be used if specified in the kubelet volume plug-in options  
#   the driver must have execute permissions 
#   if kubelet is running it may require a restart (service kubelet restart)
#
# POD YAML Example
# ================
#
# apiVersion: v1
# kind: Pod
# metadata:
#   name: ngvol
# spec:
#   containers:
#   - name: nginx
#     image: nginx
#     volumeMounts:
#     - name: test
#       mountPath: /data
#     ports:
#     - containerPort: 80
#   volumes:
#   - name: test
#     flexVolume:
#       driver: "igz/v3io"
#       options:
#         container: vol1
#

# location of the one line script 
MOUNT_V3IO="/home/iguazio/fu"

usage() {
	err "Invalid usage. Usage: "
	err "\t$0 init"
	err "\t$0 attach <json params>"
	err "\t$0 detach <mount device>"
	err "\t$0 mount <mount dir> <mount device> <json params>"
	err "\t$0 unmount <mount dir>"
	exit 1
}

err() {
	echo -e $* 1>&2
}

log() {
	echo -e $* >&1
}

ismounted() {
	MOUNT=`findmnt -n ${MNTPATH} 2>/dev/null | cut -d' ' -f1`
	[ "${MOUNT}" == "${MNTPATH}" ]
}

attach() {
	log '{"status": "Success", "device": "/dev/null"}'
	exit 0
}

detach() {
	log '{"status": "Success"}'
	exit 0
}

domount() {
	MNTPATH="$1"
	DMDEV="$2"
	PARAMS="$3"
	V3IO_URL=$(echo "$3"| jq -r '.url')
	V3IO_CNT=$(echo "$3"| jq -r '.container')
	
	# for future authentication support (use secrets and "secretRef:")
	#USERNAME=$(echo "$3"| jq -r '.["kubernetes.io/secret/username"] // empty'|base64 -d)
	#PASSWORD=$(echo "$3"| jq -r '.["kubernetes.io/secret/password"] // empty'|base64 -d)

	# ALL="mnt ${MNTPATH},${DMDEV},${V3IO_URL},${V3IO_CNT}"
	# echo "${ALL}" >> /tmp/mylog
  
	if ismounted ; then
		log '{"status": "Success"}'
		exit 0
	fi

	mkdir -p ${MNTPATH} &> /dev/null
	# mount --bind /tmp/test ${MNTPATH}  # for testing 
	
	# TBD take the v3io portal address from a kubernetes service 
	# currently call a custom .sh script to bypass issues with v3io fuse output messages, err checking, and deamonize 
	"$MOUNT_V3IO" tcp://192.168.154.57:1234 -m "${MNTPATH}" -u on -a "${V3IO_CNT}" &>/dev/null

	# TBD add error code handeling and exit code in fuse 
	if [ $? -ne 0 ]; then
		err '{ "status": "Failure", "message": "Failed to mount device '${DMDEV}' at '${MNTPATH}' , Data Container : '${V3IO_CNT}'"}'
		exit 1
	fi

	log '{"status": "Success"}'
	exit 0
}

unmount() {
        MNTPATH="$1"
        if ! ismounted ; then
                log '{"status": "Success"}'
                exit 0
        fi

        umount "${MNTPATH}" &> /dev/null
        if [ $? -ne 0 ]; then
                err '{ "status": "Failed", "message": "Failed to unmount volume at '${MNTPATH}'"}'
                exit 1
        fi
        rmdir "${MNTPATH}" &> /dev/null

        log '{"status": "Success"}'
        exit 0
}

op=$1

# for debug 
echo "L $1 , $2 , $3, $4" >> /tmp/mylog

if [ "$op" = "init" ]; then
        log '{"status": "Success"}'
        exit 0
fi

if [ $# -lt 2 ]; then
        usage
fi

shift

case "$op" in
        attach)
                attach $*
                ;;
        detach)
                detach $*
                ;;
        mount)
                domount $*
                ;;
	unmount)
		unmount $*
		;;
	*)
		usage
esac

exit 1

